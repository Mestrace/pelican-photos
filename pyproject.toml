[project]
name = "pelican-photos"
version = "1.4.0"
authors = [
    { name = "Joaquim Baptista", email = "pxquim@gmail.com"},
]
description = "Add a photo or a gallery of photos to an article"
license = {text = "AGPL-3.0"}
readme = "README.md"
keywords = ["pelican", "plugin", "photos", "image"]
repository = "https://github.com/pelican-plugins/photos"
documentation = "https://docs.getpelican.com"
packages = [
    { include = "pelican" },
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Framework :: Pelican",
    "Framework :: Pelican :: Plugins",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

requires-python = ">=3.8.1,<4.0"
dependencies = [
    "pelican>=4.5",
    "beautifulsoup4~=4.12.2",
    "piexif~=1.1.3",
    "Pillow~=9.0.1",
]

[project.urls]
"Funding" = "https://donate.getpelican.com/"
"Issue Tracker" = "https://github.com/pelican-plugins/photos/issues"

[project.optional_dependencies]
markdown = [
    "markdown"
]


[tool.pdm.dev-dependencies]
dev = [
    "black",
    "flake8",
    "flake8-black",
    "invoke",
    "ruff",
    "markdown",
    "pytest",
    "pytest-cov",
    "pytest-sugar",
]


[tool.autopub]
project-name = "Photos"
git-username = "botpub"
git-email = "52496925+botpub@users.noreply.github.com"
append-github-contributor = true

[tool.ruff]
select = [
  "B",   # flake8-bugbear
  "BLE", # flake8-blind-except
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # pyflakes
  "I",   # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "RET", # flake8-return
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "W",   # pycodestyle
  "YTT", # flake8-2020
]

ignore = [
  "D100",    # missing docstring in public module
  "D102",    # missing docstring in public method
  "D104",    # missing docstring in public package
  "D203",    # blank line before class docstring
  "D213",    # multi-line docstring summary should start at the second line
  "PGH004",  # use specific rule codes when using `NOQA`
  "RUF100",  # unused blanket `NOQA` directive
]

target-version = "py38"

[tool.ruff.isort]
combine-as-imports = true
force-sort-within-sections = true
known-first-party = ["pelican"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
